<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>niuoo</title>
  <subtitle>Develop with pleasure!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://niuoo.github.io/"/>
  <updated>2016-07-22T14:32:09.000Z</updated>
  <id>http://niuoo.github.io/</id>
  
  <author>
    <name>niuoo</name>
    <email>niuooo@yeah.net</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 215 Kth Largest Element in an Array</title>
    <link href="http://niuoo.github.io/2016/07/22/Array/"/>
    <id>http://niuoo.github.io/2016/07/22/Array/</id>
    <published>2016-07-22T14:08:48.000Z</published>
    <updated>2016-07-22T14:32:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.<br>For example,<br>Given [3,2,1,5,6,4] and k = 2, return 5.<br>Note:<br>You may assume k is always valid, 1 ≤ k ≤ array’s length.<br>思路：</p>
<ol>
<li>选取数组合适的element作为pivot （提高效率）</li>
<li>使用partition，elements&lt;=pivot的放到pivot前，elements&gt;=pivot的elements放到pivot后，pivot就放到了正确位置position。</li>
<li>缩小下次partition查找的范围。如果pivot的position比target大，那么扔掉pivot之后的elements，继续在pivot之前的elements里面找。反之，pivot的position小于target，扔掉pivot之前的elements，再pivot之后的elements里继续partition。这样不断缩小，一直到不能再缩小。</li>
<li>nums[target] 就是 the kth distinct element。</li>
</ol>
<p>1ms Java solution beats 99.1%.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> n = nums.length, target = n - k;</div><div class="line">	quicksort(nums, <span class="number">0</span>, n - <span class="number">1</span>, target);</div><div class="line">	<span class="keyword">return</span> nums[n - k]; <span class="comment">//nums[n - k]就是the kth largest element</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> start, <span class="keyword">int</span> end, <span class="keyword">int</span> target)</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span> (start &gt;= end) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">int</span> mid = start + (end - start) / <span class="number">2</span>;</div><div class="line">	<span class="keyword">int</span> pivot = choosePivot(nums[mid], nums[start], nums[end]);</div><div class="line">	<span class="keyword">int</span> i = start, j = end;</div><div class="line">	<span class="keyword">while</span> (i &lt;= j) &#123;</div><div class="line">		<span class="keyword">while</span> (nums[i] &lt; pivot) i++;</div><div class="line">		<span class="keyword">while</span> (nums[j] &gt; pivot) j--;</div><div class="line">		<span class="keyword">if</span> (i &lt;= j) &#123;</div><div class="line">			<span class="keyword">if</span> (nums[i] != nums[j]) swap(nums, i, j);</div><div class="line">			i++;</div><div class="line">			j--;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (target &lt;= i - <span class="number">1</span>) quicksort(nums, start, i - <span class="number">1</span>, target);</div><div class="line">	<span class="keyword">else</span> quicksort(nums, i, end, target);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**选取a,b,c三者的中位数*/</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">choosePivot</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> min = Math.min(a, Math.min(b, c));</div><div class="line">	<span class="keyword">int</span> max = Math.max(a, Math.max(b, c));</div><div class="line">	<span class="keyword">return</span> a - max + b - min + c;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> tmp = nums[i];</div><div class="line">	nums[i] = nums[j];</div><div class="line">	nums[j] = tmp;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>思路：<br>使用优先队列，维护size为k的小顶堆，堆顶的元素就是第k大的元素，而其余元素都比这个元素大。<br>9ms Java solution beats 66.46%.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest2</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</div><div class="line">	PriorityQueue&lt;Integer&gt; pq = <span class="keyword">new</span> PriorityQueue&lt;Integer&gt;(k);</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</div><div class="line">		<span class="keyword">if</span> (pq.size() &lt; k) pq.offer(nums[i]);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (nums[i] &gt; pq.peek()) &#123;</div><div class="line">			pq.poll();</div><div class="line">			pq.offer(nums[i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> pq.peek();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct elem
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://niuoo.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 61 Rotate List</title>
    <link href="http://niuoo.github.io/2016/07/18/My-New-Post/"/>
    <id>http://niuoo.github.io/2016/07/18/My-New-Post/</id>
    <published>2016-07-18T14:08:17.000Z</published>
    <updated>2016-07-20T16:34:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a list, rotate the list to the right by k places, where k is non-negative.<br>For example:<br>Given 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL and k = 2,<br>return 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL.</p>
<p>题意：给定列表 和一个整数 k ，旋转列表最后 k 个元素至列表最前面。<br>思路：</p>
<ol>
<li>先找到最后元素 lastOne ，并计算链表长度，同时最后一个元素指向头节点，形成一个环。</li>
<li>从head节点开始，往后走到第 len - k % len，即走到了旋转后列表新的最后元素 newLastOne，新的环链表在newLastOne之后断开。</li>
<li>断开的链表即是反转后的新链表。</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">rotateRight</span><span class="params">(ListNode head,<span class="keyword">int</span> k)</span> </span>&#123;</div><div class="line">  <span class="keyword">if</span> (head == <span class="keyword">null</span> || k == <span class="number">0</span>) <span class="keyword">return</span> head;</div><div class="line">  ListNode p = head;</div><div class="line">  <span class="keyword">int</span> len = <span class="number">1</span>;</div><div class="line">  <span class="keyword">while</span> (p.next != <span class="keyword">null</span>) &#123;</div><div class="line">    len++;</div><div class="line">	  p = p.next;</div><div class="line">  &#125;</div><div class="line">  p.next = head;<span class="comment">//form a circle </span></div><div class="line">  <span class="keyword">for</span> (k = len - k % len; k &gt; <span class="number">0</span>; k--) p = p.next;</div><div class="line">  head = p.next;<span class="comment">//break the circle at the(len - k % len)th ListNode </span></div><div class="line">  p.next = <span class="keyword">null</span>;</div><div class="line">  <span class="keyword">return</span> head;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Given a list, rotate the list to the right by k places, where k is non-negative.&lt;br&gt;For example:&lt;br&gt;Given 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;N
    
    </summary>
    
    
      <category term="leetcode" scheme="http://niuoo.github.io/tags/leetcode/"/>
    
  </entry>
  
</feed>
